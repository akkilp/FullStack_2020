{"version":3,"sources":["utils.js","searchbox.js","form.js","Contacts.js","notification.js","services.js","App.js","index.js"],"names":["Header","text","PersonCard","name","number","children","Button","handleClick","id","onClick","Input","handleChange","value","onChange","SearchBox","search","setSearch","event","target","Form","persons","handleUpdate","handleCreate","useState","data","setData","onSubmit","preventDefault","personExists","find","person","toUpperCase","newObject","window","confirm","type","Contacts","handleDelete","numberList","map","i","key","Notification","message","className","isErr","baseUrl","axios","get","then","response","post","put","delete","App","setPersons","setMessage","useEffect","manageDB","personsToShow","length","filter","indexOf","returnedPerson","concat","setTimeout","undefined","newObj","findPerson","catch","error","deleteArr","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b417530.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = ({text}) => <h1>{text}</h1>\r\n\r\nexport const PersonCard = ({name, number, children}) => <p>{name} {number} {children}</p>\r\n\r\nexport const Button = ({text, handleClick, id}) => {\r\n    return(\r\n        <>\r\n            <button onClick={handleClick}>{text} {id}</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Input = ({handleChange, name, value}) => {\r\n    return(\r\n      <div>\r\n        {name}\r\n        <input\r\n        onChange={handleChange}\r\n        name={name}\r\n        value={value}\r\n        />\r\n      </div>\r\n    )\r\n}\r\n","import {Header, Input} from \"./utils\"\r\nimport React from 'react'\r\n\r\nexport const SearchBox = ({search, setSearch}) => {\r\n\r\nconst handleChange = (event) => {\r\n    setSearch(event.target.value)\r\n}\r\n\r\n    return(\r\n      <>\r\n        <Header text='Find contact'/>\r\n        <Input name=\"name\" handleChange={handleChange} value={search}/>\r\n      </>\r\n    )\r\n  }\r\n\r\n","import React, { useState } from 'react'\r\nimport {Button, Header, Input} from \"./utils\"\r\n\r\n\r\nexport const Form = ({persons, handleUpdate, handleCreate}) => {\r\n    const [data, setData] = useState({name: '', number: ''})\r\n    \r\n    const handleChange = (event) => {\r\n      const {value, name} = event.target;\r\n      setData({...data, [name]: value})\r\n    }\r\n    \r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      const personExists = persons.find(person => person.name.toUpperCase()===data.name.toUpperCase())\r\n      const newObject = {\r\n        name: data.name,\r\n        number: data.number,\r\n      }\r\n      personExists ?\r\n        (\r\n        window.confirm(\"Contact already exists. Replace the existing data with current input?\") && handleUpdate(newObject)\r\n        ):(\r\n        handleCreate(newObject)\r\n        )       \r\n      setData({name:'',number:''}) \r\n    }\r\n     \r\n    \r\n      return(\r\n        <>\r\n          <Header text=\"New contact\"/>\r\n          <form onSubmit={handleSubmit}>\r\n            <Input name=\"name\" handleChange={handleChange} value={data.name}/>\r\n            <Input name=\"number\" handleChange={handleChange} value={data.number}/>\r\n            <Button type=\"submit\" text=\"add\"/>\r\n          </form>\r\n        </>\r\n      )\r\n    }\r\n","import React from 'react'\r\nimport {PersonCard, Button, Header} from './utils'\r\n\r\nexport const Contacts = ({persons, handleDelete}) => {\r\n\r\n  const numberList = persons.map((person, i)=>{\r\n    return (\r\n      <PersonCard name={person.name} number={person.number} key={person.name} >\r\n        <Button text=\"Delete\" handleClick={() => handleDelete(person.name)}/>\r\n      </PersonCard>\r\n    )\r\n  })\r\n\r\n  return(\r\n    <>\r\n      <Header text=\"Contacts\"/>\r\n      {numberList}\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\n\r\n\r\nexport const Notification = ({message}) => {\r\n\r\n    let className = 'msg'\r\n    if(message.isErr===true){\r\n        className = \"error\"\r\n    }\r\n    \r\n    if (message.message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={className}>\r\n        {message.message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nexport default { getAll, create, update, deletePerson}","import React, { useState, useEffect } from 'react'\n\nimport {SearchBox} from \"./searchbox\"\nimport {Form} from \"./form\"\nimport {Contacts} from \"./Contacts\"\nimport {Notification} from \"./notification\";\n\nimport \"./App.css\";\n\nimport manageDB from \"./services\"\n\nconst App = () => {\n\n  const [persons, setPersons ] = useState([]) ;\n  const [search, setSearch] = useState('');\n  const [message, setMessage] = useState({isErr: false, message: null})\n\n\n  useEffect(() =>{\n    manageDB\n      .getAll()\n      .then(response =>{\n        setPersons(response)\n      })\n  },[])\n\nconst handleCreate = (newObject) => {\n  manageDB\n    .create(newObject)\n    .then(returnedPerson =>{\n      setPersons(persons.concat(newObject))\n      setMessage({isErr:false, message: `${newObject.name} added to contact list.`}) \n      setTimeout(()=>{\n        setMessage({isErr: undefined, message: null})\n    }, 5000)\n    })\n}\n\nconst handleDelete = (name) => {\n  const deleteArr = persons.filter(person => person.name!==name)\n  const findPerson = persons.filter(person => person.name === name)[0]\n  console.log(findPerson)\n  window.confirm(`Delete ${findPerson.name}?`) && (\n    manageDB\n    .deletePerson(findPerson.id)\n    .then(()=>{\n      setPersons(deleteArr)\n      setMessage({isErr:false, message: `${name} deleted from contact list.`})\n      setTimeout(()=>{\n        setMessage({isErr: undefined, message: null})\n    }, 5000)\n    })\n    .catch(error => {\n      setMessage({isErr: true, message:\"Contact is already deleted\"})\n      setPersons(deleteArr)\n    })\n  ) \n}\n\nconst handleUpdate = (newObj) => {\n  const findPerson = persons.filter(person => person.name === newObj.name)[0]\n  manageDB\n    .update(findPerson, newObj)\n    .then(()=>{\n      setPersons(persons.map(person=>person.id!==newObj.id ? person : newObj))\n      setMessage({isErr:false, message: `${newObj.name} data updated.`})\n    })\n    .catch(error => {\n      setMessage({isErr:true,message:`${newObj.name} already deleted`})\n      setPersons(persons.filter(person=>person.id!==newObj.id))\n      setTimeout(()=>{\n        setMessage({isErr: undefined, message: null})\n    }, 5000)\n    })\n}\n\nconst personsToShow = search.length>0 ? persons.filter(person => !person.name.toUpperCase().indexOf(search.toUpperCase())) : persons\n\n  return (\n    <div>\n      <SearchBox search={search} setSearch={setSearch}/>\n      <Form persons={persons} handleCreate={handleCreate} handleUpdate={handleUpdate}/>\n      <Contacts persons={personsToShow} search={search} handleDelete={handleDelete}/>\n      <Notification message={message} setMessage={setMessage}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}